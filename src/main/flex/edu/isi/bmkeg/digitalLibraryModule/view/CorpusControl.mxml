<?xml version="1.0" encoding="utf-8"?>
<s:Panel xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:hc="com.hillelcoren.components.*"
		 width="100%" height="100%">
	<s:layout>
		<s:VerticalLayout/>
	</s:layout>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import edu.isi.bmkeg.digitalLibrary.events.*;
			import edu.isi.bmkeg.digitalLibrary.model.citations.Corpus;
			import edu.isi.bmkeg.digitalLibrary.model.qo.citations.*;
			import edu.isi.bmkeg.digitalLibrary.rl.events.*;
			import edu.isi.bmkeg.digitalLibraryModule.view.forms.*;
			import edu.isi.bmkeg.vpdmf.model.instances.LightViewInstance;
			
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			
			import spark.events.IndexChangeEvent;

			public var corpus:Corpus;
			
			[Bindable]
			public var corpusList:ArrayCollection = new ArrayCollection();

			[Bindable]
			public var slaveList:ArrayCollection = new ArrayCollection();
			
			// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			// When you select a corpus, go get it. 
			//
			protected function handle_corpusComboChange(event:IndexChangeEvent):void
			{

				var i:int = event.newIndex;
				
				if( i >= 0 ) {
					
					var o:Object = corpusCombo.dataProvider.getItemAt(i);

					if( o.vpdmfLabel != null ) {
						var vpdmfId:Number = o.vpdmfId;
						var m:Corpus = new Corpus();
						m.vpdmfId = vpdmfId
						this.dispatchEvent( new FindArticleCorpusByIdEvent(vpdmfId) );
					} else {
						this.dispatchEvent( new ListArticleCitationPagedEvent(
							new ArticleCitation_qo(), 0, 300
						) );
					}
					
				} 
				
			}
					
			//
			// Define a custom function for the labelFunction property
			// to display an Object in the ComboBox control.
			//
			public function myLabelFunc(item:Object):String {
				if( item == null )
					return "-";

				if( item.vpdmfLabel == null )
					return "< None >";
				
				return item.vpdmfLabel; 
			}				
			
			protected function addButton_clickHandler(event:MouseEvent):void
			{
				this.dispatchEvent(new ActivateCorpusPopupEvent(new Corpus()));
			}
			
			protected function corpusCombo_doubleClickHandler(event:MouseEvent):void
			{				
				this.dispatchEvent(new ActivateCorpusPopupEvent(this.corpus));
			}
			
			protected function removeButton_clickHandler(event:MouseEvent):void
			{
				this.dispatchEvent( new DeleteCorpusByIdEvent(corpus.vpdmfId) );
			}
			
			protected function downloadButton_clickHandler(event:MouseEvent):void
			{
				var o:Object = corpusCombo.selectedItem;
				
				if( o.vpdmfLabel != null ) {
					var vpdmfId:Number = o.vpdmfId;
					this.dispatchEvent( new DownloadCorpusZipEvent(vpdmfId) );
				} 
				
			}
			
		]]>
	</fx:Script>
	
	<s:List id="corpusCombo" width="100%" height="100%"
			change="handle_corpusComboChange(event)"
			dataProvider="{corpusList}"
		 	doubleClickEnabled="true"
			doubleClick="corpusCombo_doubleClickHandler(event)"
			labelFunction="myLabelFunc"
			/>
	
	<s:Group width="100%" height="25">
		<s:layout>
			 <s:HorizontalLayout />
		 </s:layout>
		<s:Button id="addButton" width="37" height="22" 
				  label="+" fontSize="16" click="addButton_clickHandler(event)"/>
		<s:Button id="removeButton" width="37" height="22" 
				  label="-" fontSize="16" click="removeButton_clickHandler(event)"/>
		<s:Button id="downloadButton" width="37" height="22" 
				  label="v" fontSize="16" click="downloadButton_clickHandler(event)"/>

	</s:Group>
		
</s:Panel>
